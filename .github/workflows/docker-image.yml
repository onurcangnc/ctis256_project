name: Deploy Docker Compose to Render

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push web service
        id: build-web
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/php-web-app:latest
        env:
          DOCKER_BUILDKIT: 1

      - name: Verify web service image locally
        run: |
          echo "Verifying the web service image locally..."
          docker images ${{ secrets.DOCKER_HUB_USERNAME }}/php-web-app:latest

      - name: Verify web service image on Docker Hub
        run: |
          echo "Verifying the web service image on Docker Hub..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/php-web-app:latest
          docker images ${{ secrets.DOCKER_HUB_USERNAME }}/php-web-app:latest

      - name: Build and push MySQL service
        run: |
          docker pull mysql:8.0
          docker tag mysql:8.0 ${{ secrets.DOCKER_HUB_USERNAME }}/mysql:8.0
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mysql:8.0

      - name: Verify MySQL service image locally
        run: docker images ${{ secrets.DOCKER_HUB_USERNAME }}/mysql:8.0

      - name: Install Render CLI
        run: curl -fsSL https://render.com/install | bash

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render login --api-key $RENDER_API_KEY
          render deploy --service-name your_render_service_name
