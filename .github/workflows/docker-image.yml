name: Deploy Docker Compose to Render

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push web service
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ctis256_project:latest

      - name: Verify web service image locally
        run: |
          echo "Verifying the web service image locally..."
          docker images ${{ secrets.DOCKER_HUB_USERNAME }}/ctis256_project:latest

      - name: Verify web service image on Docker Hub
        run: |
          echo "Verifying the web service image on Docker Hub..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/ctis256_project:latest
          docker images ${{ secrets.DOCKER_HUB_USERNAME }}/ctis256_project:latest

      - name: Install Deno
        run: |
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo "DENO_INSTALL=$HOME/.deno" >> $GITHUB_ENV
          echo "PATH=$HOME/.deno/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Deno installation
        run: |
          source $GITHUB_ENV
          deno --version

      - name: Initialize Render CLI Configuration
        run: |
          mkdir -p ~/.config/render
          echo "{\"apiKey\": \"$RENDER_API_KEY\"}" > ~/.config/render/config.json

      - name: Deploy to Render
        run: |
          source $GITHUB_ENV
          deno run --allow-read --allow-env --allow-run --allow-net https://deno.land/x/render_cli/cli.ts services deploy ctis256_project --env production --dockerfile ./Dockerfile
